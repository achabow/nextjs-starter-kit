generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model user {
  id                Int      @id @default(autoincrement())
  created_time      DateTime @default(now())
  email             String   @unique
  first_name        String?
  last_name         String?
  gender            String?
  profile_image_url String?
  user_id           String   @unique
  subscription      String?
}

model payments {
  id               Int      @id @default(autoincrement())
  created_time     DateTime @default(now())
  stripe_id        String
  email            String
  amount           String
  payment_time     String
  payment_date     String
  currency         String
  user_id          String
  customer_details String
  payment_intent   String
}

model subscriptions {
  id                        Int      @id @default(autoincrement())
  created_time              DateTime @default(now())
  subscription_id           String
  stripe_user_id            String
  status                    String
  start_date                String
  end_date                  String?
  plan_id                   String
  default_payment_method_id String?
  email                     String
  user_id                   String
}

model subscriptions_plans {
  id           Int      @id @default(autoincrement())
  created_time DateTime @default(now())
  plan_id      String
  name         String
  description  String
  amount       String
  currency     String
  interval     String
}

model invoices {
  id              Int      @id @default(autoincrement())
  created_time    DateTime @default(now())
  invoice_id      String
  subscription_id String
  amount_paid     String
  amount_due      String?
  currency        String
  status          String
  email           String
  user_id         String?
}

model event {
  id          String   @id @default(uuid()) @db.Uuid
  title       String
  description String?
  location    String
  event_date  DateTime
  created_at  DateTime @default(now())
  user_id     String
  short_code  String?  @unique
  gifts       gift[]
  guests      guest[]
}

model gift {
  id          String   @id @default(uuid()) @db.Uuid
  name        String
  price       Float
  store       String?
  is_reserved Boolean  @default(false)
  event_id    String   @db.Uuid
  event       event    @relation(fields: [event_id], references: [id])
  guest_id    String?  @db.Uuid
  guest       guest?   @relation(fields: [guest_id], references: [id])
}

model guest {
  id        String   @id @default(uuid()) @db.Uuid
  name      String
  event_id  String   @db.Uuid
  event     event    @relation(fields: [event_id], references: [id])
  gifts     gift[]
}
